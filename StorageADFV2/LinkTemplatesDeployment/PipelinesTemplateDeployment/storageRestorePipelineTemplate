{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "tenantId": { "type": "string" },
    "env": { "type": "string" },
    "backupAscTableNames": { "type": "array" }
  },
  "variables": {
    "factoryName": "[concat('glob-rp-corruptionRecovery-core-', tolower(parameters('env')),'-df')]",
    "factoryId": "[concat('Microsoft.DataFactory/factories/', variables('factoryName'))]",
    "isPublicCloud": "[if(equals(parameters('tenantId'), '72f988bf-86f1-41af-91ab-2d7cd011db47'), 'Yes', 'No')]",
    "adfStorageName": "[concat(variables('storagePrefix'), 'asc')]",
    "storagePrefix": "[concat('glob', tolower(parameters('env')))]",
    "adfStorageBackup": "[concat(variables('adfStorageName'),'backup')]",
    "adfStorageRestore": "[concat(variables('adfStorageName'),'restore')]",
    "adfStorageBackupLink": "[concat(variables('adfStorageName'),'_backuplink')]",
    "adfStorageRestoreLink": "[concat(variables('adfStorageName'),'_restorelink')]",
    "adfRestorePipelineName": "-restore-pipeline",
    "adfDatasetName": "dataset",
    "adfBlobDatasetName": "blobDataset"
  },
  "resources": [
    {
      "condition": "[equals(variables('isPublicCloud'), 'Yes')]",
      "name": "[concat(variables('factoryName'), '/',parameters('backupAscTableNames')[copyIndex()].name,variables('adfrestorePipelineName'))]",
      "type": "Microsoft.DataFactory/factories/pipelines",
      "apiVersion": "2018-06-01",
      "copy": {
        "name": "datasetblobcopy",
        "count": "[length(parameters('backupAscTableNames'))]"
      },
      "properties": {
        "description": "[concat('On demand, one-time, recover ', parameters('backupAscTableNames')[copyIndex()].name, ' table from blob, in case of disaster')]",
        "activities": [
          {
            "name": "RestoreFromBlobToTableStorage",
            "type": "Copy",
            "dependsOn": [],
            "policy": {
              "timeout": "1.00:00:00",
              "concurrency": 1,
              "retry": 3
            },
            "userProperties": [],
            "typeProperties": {
              "source": {
                "type": "JsonSource",
                "storeSettings": {
                  "recursive": false
                }
              },
              "sink": {
                "type": "AzureTableSink",
                "azureTableInsertType": "replace"
              },
              "translator": {
                "type": "TabularTranslator",
                "columnMappings": "[parameters('backupAscTableNames')[copyIndex()].columnMapping]"
              },
              "enableStaging": false
            },
            "inputs": [
              {
                "referenceName": "[concat(parameters('backupAscTableNames')[copyIndex()].name, '_restoreInput_', variables('adfStorageBackup'), '_', variables('adfBlobDatasetName'))]",
                "type": "DatasetReference",
                "parameters": {}
              }
            ],
            "outputs": [
              {
                "referenceName": "[concat(parameters('backupAscTableNames')[copyIndex()].name, '_restoreOutput_', variables('adfStorageRestore'), '_', variables('adfDatasetName'))]",
                "type": "DatasetReference",
                "parameters": {}
              }
            ]
          }
        ],
        "start": "2018-10-14T00:00:00Z",
        "end": "2018-10-14T00:00:00Z",
        "isPaused": true,
        "pipelineMode": "OneTime"
      },
      "dependsOn": [
        "[variables('factoryId')]",
        "[concat(variables('factoryId'),'/datasets/', parameters('backupAscTableNames')[copyIndex()].name, '_restoreOutput_', variables('adfStorageRestore'), '_', variables('adfDatasetName'))]",
        "[concat(variables('factoryId'),'/datasets/', parameters('backupAscTableNames')[copyIndex()].name, '_restoreInput_', variables('adfStorageBackup'), '_', variables('adfBlobDatasetName'))]"
      ]
    }
  ]
}
